## Install DOcker on Ubuntu/WSL2

- [Docker on Ubuntu](https://docs.docker.com/engine/install/ubuntu/)

Ubuntu Mantic 23.10
Ubuntu Lunar 23.04
Ubuntu Jammy 22.04 (LTS)
Ubuntu Focal 20.04 (LTS)

## Install Docker Engine, copy line by line into the shell to complete the setup

Kind Setup (wsl)

```
sudo apt update && sudo apt upgrade                                                       #You may need to disable your VPN if ou face Internet Access
sudo apt remove docker docker-engine docker.io containerd runc                            #ignore error if old installation files doesn't exists
sudo apt install --no-install-recommends apt-transport-https ca-certificates curl gnupg2  #Install prerequisites
. /etc/os-release                                                                         #On Debian or Ubuntu, first temporarily set some OS-specific variables
curl -fsSL https://download.docker.com/linux/${ID}/gpg | sudo tee /etc/apt/trusted.gpg.d/docker.asc  #Trust the repo
echo "deb [arch=amd64] https://download.docker.com/linux/${ID} ${VERSION_CODENAME} stable" | sudo tee /etc/apt/sources.list.d/docker.list #add the repo information  
sudo apt update                                                                           #update the repo information  
sudo apt install docker-ce docker-ce-cli containerd.io                                    #Install Docker Engine
sudo usermod -aG docker $USER                                                             #add your user to the Docker group
sudo dockerd                                                                              #launch dockerd
```
Open another wsl terminal and try docker

```Shell
docker run --rm hello-world
docker ps
```
## Kind, copy line by line into the shell to complete the kubernetes setup

Kind setup

```
curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
chmod +x ./kind
sudo mv ./kind /usr/local/bin/kind
```
Create Kubernetes Cluster

```
kind create cluster   # --name wslkind # Create the cluster and give it a name (optional)
ls $HOME/.kube        # Check if the .kube has been created and populated with files
```

## kubectl, copy line by line into the shell to complete the kubectl setup

```
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
kubectl version --client
kubectl version --client --output=yaml
```
## Interact with Kubernetes (Kind)

```
kubectl cluster-info                # cluster info
kubectl config get-clusters         # get created kubernetes cluster
kubectl get nodes                   # cluster nodes
kubectl get pods -n kube-system     # Pods that are part of the Kubernetes system
kubectl get all --all-namespaces    # Check the services for the whole cluster
```

## Delete the Kubernetes Cluster

```
kind delete cluster
```



