# Containers Probes

## Task 1 - Liveness probe

Define a liveness and readiness HTTP request that will fail

- [containers-probe.yaml](https://github.com/YeffaDev/learn-kubernetes-brownbag/blob/master/lab/yaml/07/containers-probe.yaml)

```
vi containers-probe.yaml                   # The probes pont the the wrong container port
kubectl get events --watch &               # The initialDelaySeconds field tells the kubelet that it should wait 10 seconds before performing the first probe.
kubectl apply -f containers-probe.yaml     # The periodSeconds field specifies that the kubelet should perform a probe every 5 seconds.
fg
CTRL-C
kubectl get pod                            # Restart is increasing
```

- After 10 sec the POD is restarted by liveness probe
- The POD is "not ready" because of readiness probe

Fix the liveness and readiness probe [UP TO YOU]


## Task 2 - OnFailure Restart

The policy restart a terminating POD only when it fails (exit code=1)

- [OnFailureRestartPod.yaml](https://github.com/YeffaDev/learn-kubernetes-brownbag/blob/master/lab/yaml/06/OnFailureRestartPod.yaml)

```
vi OnFailureRestartPod.yaml
kubectl get po --watch &
kubectl apply -f OnFailureRestartPod.yaml        # The POD stay live for 5 sec, then it fails
fg
ctrl+c
kubectl describe pod demopod2 | grep Exit
kubectl delete -f OnFailureRestartPod.yaml --force --grace-period=0
```


## Task 3 - Never Restart

The policy never restart a terminating POD.

- [NeverRestartPod.yaml](https://github.com/YeffaDev/learn-kubernetes-brownbag/blob/master/lab/yaml/06/NeverRestartPod.yaml)

```
vi NeverRestartPod.yaml
kubectl get po --watch &
kubectl apply -f NeverRestartPod.yaml        # The RESTARTS field stay 0
fg
ctrl+c
kubectl describe pod demopod3 | grep Exit
kubectl delete -f NeverRestartPod.yaml --force --grace-period=0
```
